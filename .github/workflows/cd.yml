name: CD - Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/vite-frontend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            # Pull latest image
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/vite-frontend:latest
            
            # Stop and remove old container
            docker stop vite-frontend || true
            docker rm vite-frontend || true
            
            # Run new container
            docker run -d \
              --name vite-frontend \
              --restart unless-stopped \
              -p 3000:80 \
              ${{ secrets.DOCKER_HUB_USERNAME }}/vite-frontend:latest
            
            # Clean up old images
            docker image prune -f

      - name: Verify deployment
        run: |
          echo "Waiting for service to be ready..."
          sleep 10
          
      - name: Send notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful!"
            echo "Image: ${{ secrets.DOCKER_HUB_USERNAME }}/vite-frontend:latest"
            echo "Commit: ${{ github.sha }}"
          else
            echo "❌ Deployment failed!"
          fi
